import React , {useState ,useEffect} from 'react';
import styled from 'styled-components';
import PFP from '../img/profile1.png';
import contractABI from "./VoteContract.json"


const ProfileContainer = styled.div`
  position: absolute;
  right: 10px;
  top: 15%;
  width: 300px;
  height: 400px;
  border: 2px solid black;
  display: flex;
  justify-content: center;
`
const PFPContainer = styled.img`
  margin-top: 10px;
  width: 280px;
  height: 280px;
  border: 3px solid brown;
  border-radius: 20%;
`
const PFPDescription = styled.div`
  margin-left: 40px;
  margin-top: 25px;
  width: 200px;
  height: 60px;
  border: 1px solid brown;
  text-align: center;
`

const Profile = () => {

  const [address, setAddress] = useState("")
  const [balance, setBalance] = useState(0)

  const test = async () => {
    console.log(window.klaytn._kaikas.isEnabled())
    console.log(await window.klaytn._kaikas.isUnlocked())
    console.log(await window.klaytn._kaikas.isApproved())

    const myContract = new window.caver.klay.Contract(contractABI.abi,"0xb8f41b53455ae226c03543320a59bab227f0e708")

    const result = await myContract.methods.checkCandidiates()
    console.log(result)
    
  }
  
  test()


  window.klaytn.on('accountsChanged', async function(accounts) {
    // Your code
    setAddress(accounts[0]);
    console.log(address)
    const balance = await window.caver.klay.getBalance(window.klaytn.selectedAddress)
    setBalance(balance)
  })


  

  // myContract.deploy({
  //   data: '60806040526004805460ff19166001179055600060055534801561002257600080fd5b506107d1806100326000396000f3fe60806040526004361061007b5760003560e01c80638a51dcbc1161004e5780638a51dcbc1461011b5780638d5c96801461012e578063a800736314610141578063c00007b01461017757600080fd5b8063115a147f14610080578063249f31b8146100ab578063290e9212146100d957806384c0d82914610111575b600080fd5b34801561008c57600080fd5b5061009561018a565b6040516100a2919061067d565b60405180910390f35b3480156100b757600080fd5b506100cb6100c63660046106ca565b6101ec565b6040519081526020016100a2565b3480156100e557600080fd5b506100f96100f43660046106ca565b61020d565b6040516001600160a01b0390911681526020016100a2565b610119610237565b005b6101196101293660046106e3565b610353565b61011961013c3660046106e3565b610369565b34801561014d57600080fd5b506100cb61015c3660046106e3565b6001600160a01b031660009081526001602052604090205490565b6101196101853660046106e3565b6104dd565b606060028054806020026020016040519081016040528092919081815260200182805480156101e257602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116101c4575b5050505050905090565b600381815481106101fc57600080fd5b600091825260209091200154905081565b6002818154811061021d57600080fd5b6000918252602090912001546001600160a01b0316905081565b61023f610616565b6102855760405162461bcd60e51b81526020600482015260126024820152714e6f6e76616c69642043616e64696461746560701b60448201526064015b60405180910390fd5b60045460ff166102ca5760405162461bcd60e51b815260206004820152601060248201526f159bdd1948185b1c9958591e48195b9960821b604482015260640161027c565b34662386f26fc10000146102dd57600080fd5b6006805461ffff169060006102f183610729565b825461ffff9182166101009390930a928302919092021990911617905550600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03191633179055565b6004805460ff19169055610366816104dd565b50565b336000908152602081905260409020546001600160a01b0316156103c25760405162461bcd60e51b815260206004820152601060248201526f596f7520616c726561647920766f746560801b604482015260640161027c565b60045460ff166104075760405162461bcd60e51b815260206004820152601060248201526f159bdd1948185b1c9958591e48195b9960821b604482015260640161027c565b3467016345785d8a00001461041b57600080fd5b3360008181526020818152604080832080546001600160a01b0387166001600160a01b03199182168117909255908452600180845291842080549283018155845291832001805490911690921790915560058054916104798361074a565b90915550506040516001600160a01b0382169033907f6491104836f13c96d56e095cdf163cd5636e356af1fd14d4853f3a83781abd9c90600090a36001600160a01b0381166000908152600160205260409020546005036103665761036681610353565b60045460ff16156105265760405162461bcd60e51b8152602060048201526013602482015272159bdd1a5b99c81b9bdd08199a5b9a5cda1959606a1b604482015260640161027c565b6001600160a01b03811660009081526001602090815260408083208054825181850281018501909352808352919290919083018282801561059057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610572575b5050505050905060005b8151811015610611578181815181106105b5576105b5610763565b60200260200101516001600160a01b03166108fc8351476105d69190610779565b6040518115909202916000818181858888f193505050501580156105fe573d6000803e3d6000fd5b50806106098161074a565b91505061059a565b505050565b6000805b60025481101561067557336001600160a01b03166002828154811061064157610641610763565b6000918252602090912001546001600160a01b03160361066357600091505090565b8061066d8161074a565b91505061061a565b506001905090565b6020808252825182820181905260009190848201906040850190845b818110156106be5783516001600160a01b031683529284019291840191600101610699565b50909695505050505050565b6000602082840312156106dc57600080fd5b5035919050565b6000602082840312156106f557600080fd5b81356001600160a01b038116811461070c57600080fd5b9392505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681810361074057610740610713565b6001019392505050565b60006001820161075c5761075c610713565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60008261079657634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212201365eae2c79e67eb7ae02694e828f6e99b7a62220b133d92ce77353511c07d6664736f6c634300080e0033',
  //   arguments: [123, 'My String']
  // })
  // .send({
  //   from: window.klaytn.selectedAddress,
  //   gas: 1500000,
  //   value: 0,
  // }, function(error, transactionHash) { console.log(transactionHash) })
  // .on('error', function(error) { console.log(error) })
  // .on('transactionHash', function(transactionHash) { console.log(transactionHash) })
  // .on('receipt', function(receipt) {
  //   console.log(receipt.contractAddress) // contains the new contract address
  //  })
  // .then(function(newContractInstance) {
  //   console.log(newContractInstance.options.address) // instance with the new contract address
  // });


  return (
      <ProfileContainer>
        <div>
        <PFPContainer src={PFP} />
          <PFPDescription >
            <div>name: 박승재</div>
            <div>age: 30</div>
            <div>{address}</div>
            <div>{balance}</div>
          </PFPDescription>
        </div>
      </ProfileContainer>
  )
}

export default Profile